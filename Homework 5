#include <stdio.h>
#include <stdbool.h>

#define SIZE 8

char chess[SIZE][SIZE] = {
    {'0', '0', '0', '0', '0', '0', '0', '0'},
    {'0', '0', '0', '0', '0', '0', '0', '0'},
    {'0', '0', '0', '0', '0', '0', '0', '0'},
    {'0', '0', '0', '1', '2', '0', '0', '0'},
    {'0', '0', '0', '1', '1', '0', '0', '0'},
    {'0', '0', '0', '1', '0', '0', '0', '0'},
    {'0', '0', '0', '0', '0', '0', '0', '0'},
    {'0', '0', '0', '0', '0', '0', '0', '0'},
};

bool is_valid_position(int x, int y) {
    return x >= 0 && x < SIZE && y >= 0 && y < SIZE;
}

bool find_valid_move(int chess[SIZE][SIZE], int i, int j, int dx, int dy, int *steps) {
    int x = i + dx;
    int y = j + dy;

    if (!is_valid_position(x, y) || chess[i][j] != '0') {
        return false;
    }

    *steps = 0;
    while (is_valid_position(x, y)) {
        if (chess[x][y] == '0') {
            return true;
        }
        x += dx;
        y += dy;
        (*steps)++;
    }

    return false;
}

void flip_pieces(int chess[SIZE][SIZE], int i, int j, int dx, int dy, int steps) {
    char player = chess[i][j];
    int x = i + dx;
    int y = j + dy;

    for (int s = 0; s < steps; s++) {
        chess[x][y] = player;
        x += dx;
        y += dy;
    }
}

void make_move(int chess[SIZE][SIZE], int i, int j) {
    if (chess[i][j] == '0') {
        int steps;

        for (int dx = -1; dx <= 1; dx++) {
            for (int dy = -1; dy <= 1; dy++) {
                if (dx != 0 || dy != 0) {
                    if (find_valid_move(chess, i, j, dx, dy, &steps)) {
                        flip_pieces(chess, i, j, dx, dy, steps);
                    }
                }
            }
        }

        chess[i][j] = '1';  // 假設當前下子的是黑子
    }
}

void print_board() {
    for (int i = 0; i < SIZE; i++) {
        for (int j = 0; j < SIZE; j++) {
            printf("%c ", chess[i][j]);
        }
        printf("\n");
    }
}

int main() {
    printf("初始棋盤:\n");
    print_board();

    int i, j;
    printf("輸入下子位置 (i, j): ");
    scanf("%d%d", &i, &j);

    if (i >= 0 && i < SIZE && j >= 0 && j < SIZE) {
        make_move(chess, i, j);

        printf("翻轉後的棋盤:\n");
        print_board();
    } else {
        printf("輸入位置不合法\n");
    }

    return 0;
}
